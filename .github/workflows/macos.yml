name: macOS

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'extras/images/**'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "macOS Latest Clang", os: macos-latest, target: "macos" }
        python-version: [3.9]
        python-architecture: ["x64"]

    steps:
      - uses: actions/checkout@v2

      - name: Dependencies
        run: brew install create-dmg

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-architecture }}

      - name: Upgrade PIP
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Display Python version
        run: python --version

      - name: Display PIP version
        run: pip --version

      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Build
        run: pyinstaller "My App.spec"

      - name: "Import certificate"
        uses: wpilibsuite/import-signing-certificate@main
        with:
          certificate-data: ${{ secrets.MACOS_CERTIFICATE }}
          certificate-passphrase: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          keychain-password: ${{ secrets.KEYCHAIN_PWD }}

      - name: Codesign application
        run: |
          security find-identity -v
          python codesign.py "Developer ID Application: Paulo Coutinho (99AHAA343Q)" "dist/My App.app" "extras/macos/entitlements.plist" -v

      - name: Create DMG
        run: |
          make dmg
          mv "My App.dmg" ${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg

      - name: Codesign DMG
        run: |
          security find-identity -v
          python codesign.py "Developer ID Application: Paulo Coutinho (99AHAA343Q)" "${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg" "extras/macos/entitlements.plist" -v

      - name: Notarize build
        env:
          NOTARIZATION_USERNAME: ${{ secrets.NOTARIZATION_USERNAME }}
          NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }}
        run: python notarize.py --dmg ${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg --bundle-id "com.paulocoutinho.example" --user $NOTARIZATION_USERNAME --passwd $NOTARIZATION_PASSWORD --asc-provider 54BDV6YZ73

      - name: Staple build
        run: xcrun stapler staple ${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg
          path: ${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg
          asset_name: ${{ matrix.config.target }}-${{ matrix.python-architecture }}.dmg
          asset_content_type: application/octet-stream
